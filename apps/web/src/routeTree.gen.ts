/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeamRouteImport } from './routes/team'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as KanbanRouteImport } from './routes/kanban'
import { Route as IdeasRouteImport } from './routes/ideas'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ClientsRouteImport } from './routes/clients'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AnalyticsRouteImport } from './routes/analytics'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects.$projectId'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as IdeasIdeaIdEditRouteImport } from './routes/ideas.$ideaId.edit'

const TeamRoute = TeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const KanbanRoute = KanbanRouteImport.update({
  id: '/kanban',
  path: '/kanban',
  getParentRoute: () => rootRouteImport,
} as any)
const IdeasRoute = IdeasRouteImport.update({
  id: '/ideas',
  path: '/ideas',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientsRoute = ClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => ProjectsRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const IdeasIdeaIdEditRoute = IdeasIdeaIdEditRouteImport.update({
  id: '/$ideaId/edit',
  path: '/$ideaId/edit',
  getParentRoute: () => IdeasRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/auth': typeof AuthRouteWithChildren
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/ideas': typeof IdeasRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/settings': typeof SettingsRoute
  '/team': typeof TeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/ideas/$ideaId/edit': typeof IdeasIdeaIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/auth': typeof AuthRouteWithChildren
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/ideas': typeof IdeasRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/settings': typeof SettingsRoute
  '/team': typeof TeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/ideas/$ideaId/edit': typeof IdeasIdeaIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/auth': typeof AuthRouteWithChildren
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/ideas': typeof IdeasRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/settings': typeof SettingsRoute
  '/team': typeof TeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/ideas/$ideaId/edit': typeof IdeasIdeaIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/auth'
    | '/clients'
    | '/dashboard'
    | '/ideas'
    | '/kanban'
    | '/projects'
    | '/settings'
    | '/team'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/projects/$projectId'
    | '/ideas/$ideaId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/auth'
    | '/clients'
    | '/dashboard'
    | '/ideas'
    | '/kanban'
    | '/projects'
    | '/settings'
    | '/team'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/projects/$projectId'
    | '/ideas/$ideaId/edit'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/auth'
    | '/clients'
    | '/dashboard'
    | '/ideas'
    | '/kanban'
    | '/projects'
    | '/settings'
    | '/team'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/projects/$projectId'
    | '/ideas/$ideaId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRoute
  AuthRoute: typeof AuthRouteWithChildren
  ClientsRoute: typeof ClientsRoute
  DashboardRoute: typeof DashboardRoute
  IdeasRoute: typeof IdeasRouteWithChildren
  KanbanRoute: typeof KanbanRoute
  ProjectsRoute: typeof ProjectsRouteWithChildren
  SettingsRoute: typeof SettingsRoute
  TeamRoute: typeof TeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kanban': {
      id: '/kanban'
      path: '/kanban'
      fullPath: '/kanban'
      preLoaderRoute: typeof KanbanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ideas': {
      id: '/ideas'
      path: '/ideas'
      fullPath: '/ideas'
      preLoaderRoute: typeof IdeasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clients': {
      id: '/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof ProjectsRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/ideas/$ideaId/edit': {
      id: '/ideas/$ideaId/edit'
      path: '/$ideaId/edit'
      fullPath: '/ideas/$ideaId/edit'
      preLoaderRoute: typeof IdeasIdeaIdEditRouteImport
      parentRoute: typeof IdeasRoute
    }
  }
}

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface IdeasRouteChildren {
  IdeasIdeaIdEditRoute: typeof IdeasIdeaIdEditRoute
}

const IdeasRouteChildren: IdeasRouteChildren = {
  IdeasIdeaIdEditRoute: IdeasIdeaIdEditRoute,
}

const IdeasRouteWithChildren = IdeasRoute._addFileChildren(IdeasRouteChildren)

interface ProjectsRouteChildren {
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
}

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
  AuthRoute: AuthRouteWithChildren,
  ClientsRoute: ClientsRoute,
  DashboardRoute: DashboardRoute,
  IdeasRoute: IdeasRouteWithChildren,
  KanbanRoute: KanbanRoute,
  ProjectsRoute: ProjectsRouteWithChildren,
  SettingsRoute: SettingsRoute,
  TeamRoute: TeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
